type Query {
  me: UserResult!
}

type Mutation {
  signIn(input: SignInMutationInput!): User!
  login(input: LoginMutationInput!): String!
}

union UserResult = User | UnauthorizedError

input SignInMutationInput {
  username: String!
  password: String!
}

input LoginMutationInput {
  username: String!
  password: String!
}

type User implements Node {
  id: ID!
  todos(first: Int): TodoConnection
}
